// This file was generated by Tmds.DBus.Tool.
// Bluetoothctl was used to connect to a Bluetooth Low Energy device, then `dotnet dbus codegen --bus system --service org.bluez` was executed.
// After code generation, some `ObjectPath`s were manually replaced with the right interface types.
// For more context, see https://developers.redhat.com/blog/2017/09/18/connecting-net-core-d-bus/ or https://github.com/tmds/Tmds.DBus

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Net.NetworkInformation;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using Tmds.DBus;

[assembly: InternalsVisibleTo(Tmds.DBus.Connection.DynamicAssemblyName)]

namespace HashtagChris.DotNetBlueZ
{
    [Dictionary]
    public class Adapter1Properties
    {
        private string _Address = default(string);

        public string Address
        {
            get { return _Address; }

            set { _Address = (value); }
        }

        private string _AddressType = default(string);

        public string AddressType
        {
            get { return _AddressType; }

            set { _AddressType = (value); }
        }

        private string _Name = default(string);

        public string Name
        {
            get { return _Name; }

            set { _Name = (value); }
        }

        private string _Alias = default(string);

        public string Alias
        {
            get { return _Alias; }

            set { _Alias = (value); }
        }

        private uint _Class = default(uint);

        public uint Class
        {
            get { return _Class; }

            set { _Class = (value); }
        }

        private bool _Powered = default(bool);

        public bool Powered
        {
            get { return _Powered; }

            set { _Powered = (value); }
        }

        private bool _Discoverable = default(bool);

        public bool Discoverable
        {
            get { return _Discoverable; }

            set { _Discoverable = (value); }
        }

        private uint _DiscoverableTimeout = default(uint);

        public uint DiscoverableTimeout
        {
            get { return _DiscoverableTimeout; }

            set { _DiscoverableTimeout = (value); }
        }

        private bool _Pairable = default(bool);

        public bool Pairable
        {
            get { return _Pairable; }

            set { _Pairable = (value); }
        }

        private uint _PairableTimeout = default(uint);

        public uint PairableTimeout
        {
            get { return _PairableTimeout; }

            set { _PairableTimeout = (value); }
        }

        private bool _Discovering = default(bool);

        public bool Discovering
        {
            get { return _Discovering; }

            set { _Discovering = (value); }
        }

        private string[] _UUIDs = default(string[]);

        public string[] UUIDs
        {
            get { return _UUIDs; }

            set { _UUIDs = (value); }
        }

        private string _Modalias = default(string);

        public string Modalias
        {
            get { return _Modalias; }

            set { _Modalias = (value); }
        }
    }
}